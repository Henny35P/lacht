import { type NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import Script from "next/script";
import { SignIn, SignInButton, useUser, SignOutButton } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";
import { LoadingPage, LoadingSpinner } from "~/components/loading";

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex gap-4">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-24 w-24 rounded-full"
        width={56}
        height={56}
      />
      <input
        placeholder="Escribe algo!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex border-b border-slate-300 p-4">
      <Image
        src={author.profilePicture}
        className="h-24 w-24 rounded-full  "
        alt="`@${author.username}`'s foto de perfil"
        width={56}
        height={56}
      />
      <div className="flex flex-col p-4 ">
        <div className="between flex">
          <span>{`@${author.username}`}</span>
        </div>
        {post.content}{" "}
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();
  if (postsLoading) return <LoadingPage />;
  if (!data) return <div>Oops! Algo salio mal.</div>;
  return (
    <div>
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  // Fetch lo antes posible
  api.posts.getAll.useQuery();

  // Div vacio si no esta cargado para el usuario
  if (!userLoaded) return <LoadingPage />;

  return (
    <>
      <Head>
        <title>lacht</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center  ">
        <div className="w-full border-x border-slate-200 md:max-w-2xl">
          <div className="border-b border-slate-200 p-4">
            {!isSignedIn && <SignInButton />}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>

        <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
      </main>
    </>
  );
};

export default Home;
